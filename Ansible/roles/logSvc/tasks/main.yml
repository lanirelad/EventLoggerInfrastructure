---
- name: Install necessary packages for Flask app
  apt:
    update_cache: yes

- name: Install Python and pip
  apt:
    name: 
      - python3
      - python3-pip
    state: present

- name: Install Docker
  apt:
    name: docker.io
    state: present

- name: Install Git
  apt:
    name: git
    state: present

- name: Ensure Docker is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Create a directory for logs on the host
  file:
    path: /var/log/push-event-logger 
    state: directory
    mode: '0755'
    owner: root
    group: docker

# Add the systemd service file from the Jinja2 template
- name: Deploy systemd service for Flask app
  template:
    src: webhook.service.j2
    dest: /etc/systemd/system/webhook.service
    mode: '0644'

- name: Reload systemd to pick up new service file
  systemd:
    daemon_reload: yes

- name: Enable and start the Flask app systemd service
  systemd:
    name: webhook.service
    state: started
    enabled: yes

# - name: Stop and disable Flask app service if running
#   systemd:
#     name: flask-app
#     state: stopped
#     enabled: no
#   ignore_errors: yes

# - name: stop any process running on port 3000
#   shell: fuser -k 3000/tcp || true
#   ignore_errors: yes

# - name: Remove any existing Docker container named flask-app
#   docker_container:
#     name: flask-app
#     state: absent

# - name: Wait for port 3000 to be released
#   wait_for:
#     port: 3000
#     state: absent
#     timeout: 10

# - name: Pull Docker image for Flask app
#   docker_image:
#     name: lanirelad/push-event-logger
#     tag: latest
#     source: pull
#     force_source: yes

# - name: Run Flask app Docker container
#   docker_container:
#     name: flask-app
#     image: lanirelad/push-event-logger:latest
#     state: started
#     restart_policy: "no"
#     network_mode: "host"
#     recreate: true
#     pull: yes
#     volumes:
#       - /var/log/push-event-logger:/workingDir  
#     ports:
#       - "3000:3000"
